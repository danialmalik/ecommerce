name: Django CI

on:
  push:
    branches: [ 'develop', 'master', 'release-candidate', 'danial/add-unit-tests-github-actions' ]
  pull_request:
    branches: [ 'develop', 'master', 'release-candidate', 'danial/add-unit-tests-github-actions' ]

jobs:

  translations-validations:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        openedx-release: ['ironwood.master']
    steps:
      - uses: actions/checkout@v2
      - name: Setup docker containers
        run: |
          OPENEDX_RELEASE=${{ matrix.openedx-release }} docker-compose -f .github/docker-compose-github.yml up -d
      - name: Get into the container
        run: |
          docker exec -it ecommerce_testing bash
      - name: Install requirements.js
        run: |
          source /edx/app/ecommerce/ecommerce_env
          cd /edx/app/ecommerce/ecommerce/
          make requirements.js
      - name: run check_translations_up_to_date
        run: |
          source /edx/app/ecommerce/ecommerce_env
          cd /edx/app/ecommerce/ecommerce/
          make check_translations_up_to_date
      - name: run validate_translations
        run: |
          source /edx/app/ecommerce/ecommerce_env
          cd /edx/app/ecommerce/ecommerce/
          make validate_translations

  quality-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        openedx-release: ['ironwood.master']
    steps:
      - uses: actions/checkout@v2
      - name: Setup docker containers
        run: |
          OPENEDX_RELEASE=${{ matrix.openedx-release }} docker-compose -f .github/docker-compose-github.yml up -d
      - name: Install requirements.js
        run: |
          docker exec -t ecommerce_testing bash -c '
          source /edx/app/ecommerce/ecommerce_env &&
          cd /edx/app/ecommerce/ecommerce/ &&
          make requirements.js'
      - name: run clean_static
        run: |
          docker exec -t ecommerce_testing bash -c '
          source /edx/app/ecommerce/ecommerce_env &&
          cd /edx/app/ecommerce/ecommerce/ &&
          make clean_static'
      - name: Run static
        run: |
          docker exec -t ecommerce_testing bash -c '
          source /edx/app/ecommerce/ecommerce_env &&
          cd /edx/app/ecommerce/ecommerce/ &&
          make static'
      - name: Test quality
        run: |
          docker exec -t ecommerce_testing bash -c '
          source /edx/app/ecommerce/ecommerce_env &&
          cd /edx/app/ecommerce/ecommerce/ &&
          make quality'
      - name: Validate JS
        run: |
          docker exec -t ecommerce_testing bash -c '
          export PATH=$PATH:/edx/app/ecommerce/nodeenvs/ecommerce/bin:/snap/bin &&
          source /edx/app/ecommerce/ecommerce_env &&
          cd /edx/app/ecommerce/ecommerce/ &&
          xvfb-run make validate_js'

  python-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        openedx-release: ['ironwood.master']
    steps:
    - uses: actions/checkout@v2
    - name: Setup docker containers
      run: |
        OPENEDX_RELEASE=${{ matrix.openedx-release }} docker-compose -f .github/docker-compose-github.yml up -d
    - name: Install requirements
      run: |
        docker exec -t ecommerce_testing bash -c '
        source /edx/app/ecommerce/ecommerce_env &&
        cd /edx/app/ecommerce/ecommerce/ &&
        make requirements'
    - name: Run 'make html'
      run: |
        docker exec -t ecommerce_testing bash -c '
        source /edx/app/ecommerce/ecommerce_env &&
        cd /edx/app/ecommerce/ecommerce/docs &&
        DJANGO_SETTINGS_MODULE=ecommerce.settings.test make html'
    - name: Run 'make clean_static'
      run: |
        docker exec -t ecommerce_testing bash -c '
        source /edx/app/ecommerce/ecommerce_env &&
        cd /edx/app/ecommerce/ecommerce/ &&
        DJANGO_SETTINGS_MODULE=ecommerce.settings.test make clean_static'
    - name: Run 'make static'
      run: |
        docker exec -t ecommerce_testing bash -c '
        source /edx/app/ecommerce/ecommerce_env &&
        cd /edx/app/ecommerce/ecommerce/ &&
        DJANGO_SETTINGS_MODULE=ecommerce.settings.test make static'
    - name: Run the python tests
      run: |
        docker exec -t ecommerce_testing bash -c '
        source /edx/app/ecommerce/ecommerce_env &&
        cd /edx/app/ecommerce/ecommerce/ &&
        TRAVIS=1 DJANGO_SETTINGS_MODULE=ecommerce.settings.test xvfb-run make validate_python'
