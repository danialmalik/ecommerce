name: Django CI

on:
  push:
    branches: [ 'develop', 'master', 'release-candidate' ]
  pull_request:
    branches: [ 'develop', 'master', 'release-candidate' ]

jobs:
  quality-tests:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [2.7]
        openedx-release: ['hawthorn.master']
  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [2.7]

    steps:
    # - uses: actions/checkout@v2
    # - name: Set up Python ${{ matrix.python-version }}
    #   uses: actions/setup-python@v1
    #   with:
    #     python-version: ${{ matrix.python-version }}
    - name: Setup docker containers
      run: |
        OPENEDX_RELEASE=${{matrix.openedx-release}} docker-compose -f ./.github/docker-compose-github.yml up -d
    - name: Install dependencies
      run: |
        docker exec -t ecommerce_testing bash -c 'source /edx/app/ecommerce/ecommerce_env && cd /edx/app/ecommerce/ecommerce/ && make requirements'
    - name: Run 'make html'
      run: |
        docker exec -t ecommerce_testing bash -c 'source /edx/app/ecommerce/ecommerce_env && cd /edx/app/ecommerce/ecommerce/docs && make html'
    - name: Run 'make clean_static'
      run: |
        docker exec -t ecommerce_testing bash -c 'source /edx/app/ecommerce/ecommerce_env && cd /edx/app/ecommerce/ecommerce/ && DJANGO_SETTINGS_MODULE=ecommerce.settings.test make clean_static'
    - name: Run 'make static'
      run: |
        docker exec -t ecommerce_testing bash -c 'source /edx/app/ecommerce/ecommerce_env && cd /edx/app/ecommerce/ecommerce/ && make requirements && DJANGO_SETTINGS_MODULE=ecommerce.settings.test make static'
    - name: Run the python tests
      run: |
        docker exec -t ecommerce_testing bash -c 'source /edx/app/ecommerce/ecommerce_env && cd /edx/app/ecommerce/ecommerce/ && DJANGO_SETTINGS_MODULE=ecommerce.settings.test xvfb-run make validate_python'
